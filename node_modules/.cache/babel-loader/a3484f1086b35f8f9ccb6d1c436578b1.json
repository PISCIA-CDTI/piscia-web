{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/ibathwater/wow-eye/src/pages/ThingSpecification.js\";\nimport React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useLocation } from \"react-router\";\nimport { Header } from \"../components/Header\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport \"../static/styles/thingCard.css\";\nimport \"../static/styles/thing.css\";\nexport const ThingSpecification = props => {\n  let location = useLocation();\n  let {\n    id\n  } = useParams();\n  let thing = location.state.thing;\n  console.log(thing.properties);\n  const thingProprtiesView = thing.properties ? Object.keys(thing.properties).map(key => {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: 'thingCard',\n      key: thing.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 30\n      }\n    }, thing.properties[key].title)));\n  }) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardDeck, {\n    className: 'cardDeck',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, thingProprtiesView));\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/ibathwater/wow-eye/src/pages/ThingSpecification.js"],"names":["React","useParams","useLocation","Header","Card","CardDeck","ThingSpecification","props","location","id","thing","state","console","log","properties","thingProprtiesView","Object","keys","map","key","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,gCAAP;AACA,OAAO,4BAAP;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACzC,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AACA,MAAI;AAAEO,IAAAA;AAAF,MAASR,SAAS,EAAtB;AACA,MAAIS,KAAK,GAAGF,QAAQ,CAACG,KAAT,CAAeD,KAA3B;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,UAAlB;AACA,QAAMC,kBAAkB,GAAGL,KAAK,CAACI,UAAN,GAAmBE,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACI,UAAlB,EAA8BI,GAA9B,CAAkCC,GAAG,IAAG;AAClF,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,WAAjB;AAA8B,MAAA,GAAG,EAAET,KAAK,CAACD,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,KAAK,CAACI,UAAN,CAAiBK,GAAjB,EAAsBC,KAA1B,CAAb,CADJ,CADJ;AAKH,GAN6C,CAAnB,GAMvB,IANJ;AAQA,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEX,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,kBADL,CAFJ,CADJ;AAQH,CAtBM","sourcesContent":["import React from \"react\";\nimport {useParams} from 'react-router-dom';\nimport { useLocation } from \"react-router\";\nimport {Header} from \"../components/Header\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport \"../static/styles/thingCard.css\";\nimport \"../static/styles/thing.css\";\n\nexport const ThingSpecification = (props) => {\n    let location = useLocation();\n    let { id } = useParams();\n    let thing = location.state.thing;\n\n    console.log(thing.properties);\n    const thingProprtiesView = thing.properties ? Object.keys(thing.properties).map(key =>{\n        return (\n            <Card className={'thingCard'} key={thing.id}>\n                <Card.Header><b>{thing.properties[key].title}</b></Card.Header>\n            </Card>\n        );\n    }): null;\n\n    return (\n        <>\n            <Header title={id}></Header>\n            <CardDeck className={'cardDeck'}>\n                {thingProprtiesView}\n            </CardDeck>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingPropertyContext.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nconst ThingPropertyContext = React.createContext();\n\nconst ThingPropertyContextProvider = props => {\n  let location = useLocation();\n  let thingId = location.state.thing.id;\n  let socket;\n  const [thingPropData, setThingPropData] = useState([]);\n\n  const handleDisconnect = () => {\n    if (socket) socket.close();\n  };\n\n  useEffect(() => {\n    socket = new WebSocket('ws://' + thingId.split('http://')[1]);\n\n    socket.onmessage = event => {\n      const recevData = JSON.parse(event.data);\n      setThingPropData(prevData => {\n        return prevData.length === 0 ? [...prevData, recevData.data.measurement] : prevData.filter(item => Object.keys(item)[0] === Object.keys(recevData.data.measurement)[0]).length !== 0 ? [...prevData.map(item => {\n          if (Object.keys(item)[0] === Object.keys(recevData.data.measurement)[0]) return recevData.data.measurement;\n          return item;\n        })] : [...prevData, recevData.data.measurement];\n      });\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(ThingPropertyContext.Provider, {\n    value: {\n      thingPropData,\n      handleDisconnect\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport { ThingPropertyContext, ThingPropertyContextProvider };","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingPropertyContext.js"],"names":["React","useEffect","useState","useLocation","ThingPropertyContext","createContext","ThingPropertyContextProvider","props","location","thingId","state","thing","id","socket","thingPropData","setThingPropData","handleDisconnect","close","WebSocket","split","onmessage","event","recevData","JSON","parse","data","prevData","length","measurement","filter","item","Object","keys","map","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,MAAMC,oBAAoB,GAAGJ,KAAK,CAACK,aAAN,EAA7B;;AAEA,MAAMC,4BAA4B,GAAIC,KAAD,IAAW;AAC5C,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAIM,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAeC,KAAf,CAAqBC,EAAnC;AACA,MAAIC,MAAJ;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMc,gBAAgB,GAAG,MAAM;AAC3B,QAAIH,MAAJ,EAAYA,MAAM,CAACI,KAAP;AACf,GAFD;;AAIAhB,EAAAA,SAAS,CAAE,MAAM;AACbY,IAAAA,MAAM,GAAE,IAAIK,SAAJ,CAAc,UAAQT,OAAO,CAACU,KAAR,CAAc,SAAd,EAAyB,CAAzB,CAAtB,CAAR;;AACAN,IAAAA,MAAM,CAACO,SAAP,GAAoBC,KAAD,IAAW;AAC1B,YAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAlB;AACAV,MAAAA,gBAAgB,CAACW,QAAQ,IAAI;AACzB,eAAOA,QAAQ,CAACC,MAAT,KAAmB,CAAnB,GAAuB,CAC1B,GAAGD,QADuB,EAE1BJ,SAAS,CAACG,IAAV,CAAeG,WAFW,CAAvB,GAGJF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAIC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,MAAyBC,MAAM,CAACC,IAAP,CAAYV,SAAS,CAACG,IAAV,CAAeG,WAA3B,EAAwC,CAAxC,CAAjD,EAA6FD,MAA7F,KAAwG,CAAxG,GAA2G,CAC1G,GAAGD,QAAQ,CAACO,GAAT,CAAaH,IAAI,IAAI;AACpB,cAAIC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,MAAyBC,MAAM,CAACC,IAAP,CAAYV,SAAS,CAACG,IAAV,CAAeG,WAA3B,EAAwC,CAAxC,CAA7B,EAAwE,OAAON,SAAS,CAACG,IAAV,CAAeG,WAAtB;AACxE,iBAAOE,IAAP;AACC,SAHF,CADuG,CAA3G,GAKG,CACF,GAAGJ,QADD,EAEFJ,SAAS,CAACG,IAAV,CAAeG,WAFb,CARN;AAYH,OAbe,CAAhB;AAcH,KAhBD;;AAkBA,WAAO,MAAM;AACTf,MAAAA,MAAM,CAACI,KAAP;AACH,KAFD;AAIH,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACI,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAG;AACnCH,MAAAA,aADmC;AAEnCE,MAAAA;AAFmC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKT,KAAK,CAAC2B,QAJX,CADJ;AAQH,CA7CD;;AA+CA,SAAQ9B,oBAAR,EAA8BE,4BAA9B","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useLocation } from \"react-router\";\n\nconst ThingPropertyContext = React.createContext();\n\nconst ThingPropertyContextProvider = (props) => {\n    let location = useLocation();\n    let thingId = location.state.thing.id;\n    let socket;\n\n    const [thingPropData, setThingPropData] = useState([]);\n\n    const handleDisconnect = () => {\n        if (socket) socket.close();\n    }\n\n    useEffect( () => {\n        socket= new WebSocket('ws://'+thingId.split('http://')[1]);\n        socket.onmessage = (event) => {\n            const recevData = JSON.parse(event.data);\n            setThingPropData(prevData => {\n                return prevData.length=== 0 ? [\n                    ...prevData,\n                    recevData.data.measurement\n                ]: prevData.filter(item => Object.keys(item)[0] === Object.keys(recevData.data.measurement)[0]).length !== 0? [\n                    ...prevData.map(item => {\n                        if (Object.keys(item)[0] === Object.keys(recevData.data.measurement)[0])return recevData.data.measurement;\n                        return item;\n                        })\n                   ]: [\n                    ...prevData,\n                    recevData.data.measurement\n                ]\n            });\n        };\n\n        return () => {\n            socket.close();\n        }\n\n    }, [])\n\n    return (\n        <ThingPropertyContext.Provider value ={{\n            thingPropData,\n            handleDisconnect\n        }}>\n            {props.children}\n        </ThingPropertyContext.Provider>\n    )\n};\n\nexport {ThingPropertyContext, ThingPropertyContextProvider}"]},"metadata":{},"sourceType":"module"}
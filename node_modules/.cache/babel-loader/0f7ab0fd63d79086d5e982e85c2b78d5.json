{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingHistoricContext.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst moment = require(\"moment\");\n\nconst ThingHistoricContext = React.createContext();\n\nconst ThingHistoricContextProvider = props => {\n  let location = useLocation();\n  let {\n    id\n  } = useParams();\n  let thingId = location.state.thingId;\n  let thingProperty = location.state.property;\n  const serverAPImethod = `${thingId}/properties/${thingProperty.title}`;\n  const [timeData, setTimeData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      console.log(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n      const response = await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n\n      if (response.status === 200) {\n        setTimeData(prevData => prevData.length > 10 ? [...prevData, response.data.values].slice(1) : [...prevData, response.data.values]);\n      }\n    }\n\n    const endDate = moment().toISOString();\n    const startDate = moment().subtract(30, 'days').toISOString();\n    fetchData(startDate, endDate);\n  }, []);\n  return /*#__PURE__*/React.createElement(ThingHistoricContext.Provider, {\n    value: {\n      id,\n      thingId,\n      thingProperty\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport { ThingHistoricContext, ThingHistoricContextProvider };","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingHistoricContext.js"],"names":["React","useEffect","useState","useLocation","useParams","axios","moment","require","ThingHistoricContext","createContext","ThingHistoricContextProvider","props","location","id","thingId","state","thingProperty","property","serverAPImethod","title","timeData","setTimeData","fetchData","console","log","startDate","endDate","response","get","status","prevData","length","data","values","slice","toISOString","subtract","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,oBAAoB,GAAGR,KAAK,CAACS,aAAN,EAA7B;;AAEA,MAAMC,4BAA4B,GAAIC,KAAD,IAAW;AAC5C,MAAIC,QAAQ,GAAGT,WAAW,EAA1B;AACA,MAAI;AAAEU,IAAAA;AAAF,MAAST,SAAS,EAAtB;AACA,MAAIU,OAAO,GAAGF,QAAQ,CAACG,KAAT,CAAeD,OAA7B;AACA,MAAIE,aAAa,GAAGJ,QAAQ,CAACG,KAAT,CAAeE,QAAnC;AACA,QAAMC,eAAe,GAAI,GAAEJ,OAAQ,eAAcE,aAAa,CAACG,KAAM,EAArE;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAG,MAAM;AACd,mBAAeqB,SAAf,GAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEN,eAAgB,SAAQO,SAAU,YAAWC,OAAQ,EAApE;AACA,YAAMC,QAAQ,GAAI,MAAMtB,KAAK,CAACuB,GAAN,CAAW,GAAEV,eAAgB,SAAQO,SAAU,YAAWC,OAAQ,EAAlE,CAAxB;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA4B;AACxBR,QAAAA,WAAW,CAACS,QAAQ,IAAIA,QAAQ,CAACC,MAAT,GAAkB,EAAlB,GAAsB,CAAC,GAAGD,QAAJ,EAAcH,QAAQ,CAACK,IAAT,CAAcC,MAA5B,EAAoCC,KAApC,CAA0C,CAA1C,CAAtB,GACnB,CAAC,GAAGJ,QAAJ,EAAcH,QAAQ,CAACK,IAAT,CAAcC,MAA5B,CADM,CAAX;AAEH;AACJ;;AACD,UAAMP,OAAO,GAAIpB,MAAM,GAAG6B,WAAT,EAAjB;AACA,UAAMV,SAAS,GAAInB,MAAM,GAAG8B,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,EAA8BD,WAA9B,EAAnB;AACAb,IAAAA,SAAS,CAACG,SAAD,EAAYC,OAAZ,CAAT;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAG;AACnCb,MAAAA,EADmC;AAEnCC,MAAAA,OAFmC;AAGnCE,MAAAA;AAHmC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKL,KAAK,CAAC0B,QALX,CADJ;AAUH,CAhCD;;AAmCA,SAAQ7B,oBAAR,EAA8BE,4BAA9B","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useLocation } from \"react-router\";\nimport {useParams} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst moment = require(\"moment\");\n\nconst ThingHistoricContext = React.createContext();\n\nconst ThingHistoricContextProvider = (props) => {\n    let location = useLocation();\n    let { id } = useParams();\n    let thingId = location.state.thingId;\n    let thingProperty = location.state.property;\n    const serverAPImethod = `${thingId}/properties/${thingProperty.title}`;\n    const [timeData, setTimeData] = useState([]);\n\n    useEffect(  () => {\n        async function fetchData() {\n            console.log(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`)\n            const response =  await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n            if (response.status === 200){\n                setTimeData(prevData => prevData.length > 10? [...prevData, response.data.values].slice(1)\n                    :[...prevData, response.data.values]);\n            }\n        }\n        const endDate =  moment().toISOString();\n        const startDate =  moment().subtract(30, 'days').toISOString();\n        fetchData(startDate, endDate);\n    }, []);\n\n    return (\n        <ThingHistoricContext.Provider value ={{\n            id,\n            thingId,\n            thingProperty\n        }}>\n            {props.children}\n        </ThingHistoricContext.Provider>\n    )\n\n}\n\n\nexport {ThingHistoricContext, ThingHistoricContextProvider}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/components/Map.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport PropTypes from 'prop-types';\nimport { MapContext } from \"../context/MapContext\";\n\nfunction Map(props) {\n  const {\n    addMarkers,\n    updateMarkers\n  } = useContext(MapContext);\n  const position = [51.505, -0.09];\n  useEffect(() => {\n    // create map\n    //const markersData = addMarkers(props.data);\n    const updatedMap = L.map('mapId', {\n      center: props.center,\n      zoom: props.zoom,\n      layers: [L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      })]\n    });\n    /*const layer = L.layerGroup().addTo(updatedMap);\n    updateMarkers(layer,markersData);*/\n\n    return () => {\n      updatedMap.off();\n      updatedMap.remove();\n    };\n  }, [props.data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mapId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  });\n}\n\nMap.propTypes = {\n  center: PropTypes.arrayOf(PropTypes.number).isRequired,\n  zoom: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      long: PropTypes.number.isRequired\n    })\n  })).isRequired\n};\nexport default Map;","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/components/Map.js"],"names":["React","useContext","useEffect","useState","L","PropTypes","MapContext","Map","props","addMarkers","updateMarkers","position","updatedMap","map","center","zoom","layers","tileLayer","attribution","off","remove","data","propTypes","arrayOf","number","isRequired","shape","id","string","title","color","geo","lat","long"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AACf,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAA6BT,UAAU,CAACK,UAAD,CAA7C;AACA,QAAMK,QAAQ,GAAG,CAAC,MAAD,EAAS,CAAC,IAAV,CAAjB;AACAT,EAAAA,SAAS,CAAE,MAAK;AACZ;AACA;AAEA,UAAMU,UAAU,GAAER,CAAC,CAACS,GAAF,CAAM,OAAN,EAAe;AAC7BC,MAAAA,MAAM,EAAEN,KAAK,CAACM,MADe;AAE7BC,MAAAA,IAAI,EAAEP,KAAK,CAACO,IAFiB;AAG7BC,MAAAA,MAAM,EAAE,CACJZ,CAAC,CAACa,SAAF,CAAY,yCAAZ,EAAuD;AACnDC,QAAAA,WAAW,EAAE;AADsC,OAAvD,CADI;AAHqB,KAAf,CAAlB;AAUA;;;AAIA,WAAO,MAAM;AACTN,MAAAA,UAAU,CAACO,GAAX;AACAP,MAAAA,UAAU,CAACQ,MAAX;AACH,KAHD;AAIH,GAtBQ,EAsBP,CAACZ,KAAK,CAACa,IAAP,CAtBO,CAAT;AAyBA,sBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAEDd,GAAG,CAACe,SAAJ,GAAgB;AACZR,EAAAA,MAAM,EAAET,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC,UADhC;AAEZV,EAAAA,IAAI,EAAEV,SAAS,CAACmB,MAAV,CAAiBC,UAFX;AAGZJ,EAAAA,IAAI,EAAEhB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACqB,KAAV,CAAgB;AACpCC,IAAAA,EAAE,EAAEtB,SAAS,CAACuB,MAAV,CAAiBH,UADe;AAEpCI,IAAAA,KAAK,EAAExB,SAAS,CAACuB,MAAV,CAAiBH,UAFY;AAGpCK,IAAAA,KAAK,EAAEzB,SAAS,CAACuB,MAHmB;AAIpCG,IAAAA,GAAG,EAAE1B,SAAS,CAACqB,KAAV,CAAgB;AACjBM,MAAAA,GAAG,EAAE3B,SAAS,CAACmB,MAAV,CAAiBC,UADL;AAEjBQ,MAAAA,IAAI,EAAE5B,SAAS,CAACmB,MAAV,CAAiBC;AAFN,KAAhB;AAJ+B,GAAhB,CAAlB,EAQFA;AAXQ,CAAhB;AAcA,eAAelB,GAAf","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport L from \"leaflet\";\nimport PropTypes from 'prop-types';\nimport {MapContext} from \"../context/MapContext\";\n\nfunction Map(props){\n    const {addMarkers,updateMarkers} = useContext(MapContext);\n    const position = [51.505, -0.09]\n    useEffect( ()=> {\n        // create map\n        //const markersData = addMarkers(props.data);\n\n        const updatedMap= L.map('mapId', {\n            center: props.center,\n            zoom: props.zoom,\n            layers: [\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                }),\n            ]\n        });\n\n        /*const layer = L.layerGroup().addTo(updatedMap);\n        updateMarkers(layer,markersData);*/\n\n\n        return () => {\n            updatedMap.off();\n            updatedMap.remove();\n        }\n    },[props.data]);\n\n\n    return (\n        <div id=\"mapId\" />\n    )\n}\n\nMap.propTypes = {\n    center: PropTypes.arrayOf(PropTypes.number).isRequired,\n    zoom: PropTypes.number.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        color: PropTypes.string,\n        geo: PropTypes.shape({\n            lat: PropTypes.number.isRequired,\n            long: PropTypes.number.isRequired\n        })\n    })).isRequired\n};\n\nexport default Map"]},"metadata":{},"sourceType":"module"}
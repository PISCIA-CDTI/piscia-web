{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js\";\nimport { Header } from \"../components/Header\";\nimport React, { useContext } from \"react\";\nimport { ThingHistoricContext } from \"../context/ThingHistoricContext\";\nimport { useLocation } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nexport const ThingHistoricValues = props => {\n  const {\n    thingId\n  } = useContext(ThingHistoricContext);\n  let location = useLocation();\n  let {\n    id\n  } = useParams();\n  let thing = location.state.thing;\n  return /*#__PURE__*/React.createElement(Header, {\n    title: thing + 'Historic Values',\n    key: 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js"],"names":["Header","React","useContext","ThingHistoricContext","useLocation","useParams","ThingHistoricValues","props","thingId","location","id","thing","state"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,sBAArB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,oBAAR,QAAmC,iCAAnC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAYN,UAAU,CAACC,oBAAD,CAA5B;AACA,MAAIM,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAI;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAtB;AACA,MAAIM,KAAK,GAAGF,QAAQ,CAACG,KAAT,CAAeD,KAA3B;AACA,sBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,KAAK,GAAE,iBAAtB;AAAyC,IAAA,GAAG,EAAE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CARM","sourcesContent":["import {Header} from \"../components/Header\";\nimport React, {useContext} from \"react\";\nimport {ThingHistoricContext} from \"../context/ThingHistoricContext\";\nimport { useLocation } from \"react-router\";\nimport {useParams} from \"react-router-dom\";\n\nexport const ThingHistoricValues = (props) => {\n    const {thingId} = useContext(ThingHistoricContext);\n    let location = useLocation();\n    let { id } = useParams();\n    let thing = location.state.thing;\n    return (\n        <Header title={thing+ 'Historic Values'} key={'title'}></Header>\n    )\n}"]},"metadata":{},"sourceType":"module"}
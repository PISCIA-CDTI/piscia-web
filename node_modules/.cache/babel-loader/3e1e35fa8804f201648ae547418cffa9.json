{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/ibathwater/wow-eye/src/pages/Timeline.js\";\nimport React, { useContext } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { TimelineContext } from \"../context/TimelineContext\";\nexport const Timeline = () => {\n  const {\n    id,\n    thingProperty,\n    timeData\n  } = useContext(TimelineContext);\n  const timestampArray = timeData.map(item => item.timestamp);\n  const valueData = timeData.map(item => item[thingProperty.title]);\n  const data = {\n    labels: timestampArray,\n    datasets: [{\n      label: thingProperty.title,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75, 192, 192, 0.4)',\n      borderColor: 'rgba(75, 192, 192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75, 192, 192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n      pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 10,\n      pointHitRadius: 10,\n      data: valueData\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: 'Real-Time Information of ' + id + \" for property \" + thingProperty.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/ibathwater/wow-eye/src/pages/Timeline.js"],"names":["React","useContext","Header","TimelineContext","Timeline","id","thingProperty","timeData","timestampArray","map","item","timestamp","valueData","title","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,aAAL;AAAoBC,IAAAA;AAApB,MAAgCN,UAAU,CAACE,eAAD,CAAhD;AACA,QAAMK,cAAc,GAAGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAvB;AACA,QAAMC,SAAS,GAAGL,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACJ,aAAa,CAACO,KAAf,CAAzB,CAAlB;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAEP,cADC;AAETQ,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAEX,aAAa,CAACO,KADzB;AAEIK,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,WAAW,EAAE,GAHjB;AAIIC,MAAAA,eAAe,EAAE,yBAJrB;AAKIC,MAAAA,WAAW,EAAE,sBALjB;AAMIC,MAAAA,cAAc,EAAE,MANpB;AAOIC,MAAAA,UAAU,EAAE,EAPhB;AAQIC,MAAAA,gBAAgB,EAAE,GARtB;AASIC,MAAAA,eAAe,EAAE,OATrB;AAUIC,MAAAA,gBAAgB,EAAE,sBAVtB;AAWIC,MAAAA,oBAAoB,EAAE,MAX1B;AAYIC,MAAAA,gBAAgB,EAAE,CAZtB;AAaIC,MAAAA,gBAAgB,EAAE,CAbtB;AAcIC,MAAAA,yBAAyB,EAAE,sBAd/B;AAeIC,MAAAA,qBAAqB,EAAE,wBAf3B;AAgBIC,MAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,MAAAA,WAAW,EAAE,EAjBjB;AAkBIC,MAAAA,cAAc,EAAE,EAlBpB;AAmBIpB,MAAAA,IAAI,EAAEF;AAnBV,KADM;AAFD,GAAb;AA0BF,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,8BAA6BP,EAA7B,GAAkC,gBAAlC,GAAoDC,aAAa,CAACO,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKD,CAnCM","sourcesContent":["import React, {useContext} from \"react\";\nimport {Header} from \"../components/Header\";\nimport {TimelineContext} from \"../context/TimelineContext\";\n\nexport const Timeline = () => {\n    const {id, thingProperty, timeData} = useContext(TimelineContext);\n    const timestampArray = timeData.map(item => item.timestamp);\n    const valueData = timeData.map(item => item[thingProperty.title]);\n    const data = {\n        labels: timestampArray,\n        datasets: [\n            {\n                label: thingProperty.title,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\n                borderColor: 'rgba(75, 192, 192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75, 192, 192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n                pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 10,\n                pointHitRadius: 10,\n                data: valueData\n            }\n        ]\n    };\n  return (\n      <>\n          <Header title={'Real-Time Information of '+ id + \" for property \"+ thingProperty.title}></Header>\n      </>\n  );\n};"]},"metadata":{},"sourceType":"module"}
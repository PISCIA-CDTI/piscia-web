{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js\";\nimport { Header } from \"../components/Header\";\nimport React, { useContext } from \"react\";\nimport { ThingHistoricContext } from \"../context/ThingHistoricContext\";\nimport { Line } from \"react-chartjs-2\";\nexport const ThingHistoricValues = props => {\n  const {\n    id,\n    thingProperty,\n    timeData\n  } = useContext(ThingHistoricContext);\n  const timestampArray = timeData ? timeData.map(item => item.timestamp) : [];\n  const valueData = timeData ? timeData.map(item => item[thingProperty.title]) : [];\n  console.log(valueData);\n  const data = {\n    labels: timestampArray,\n    datasets: [{\n      label: thingProperty.title,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75, 192, 192, 0.4)',\n      borderColor: 'rgba(75, 192, 192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75, 192, 192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n      pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: valueData\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: id + 'Historic Values',\n    key: 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, JSON.stringify(timeData)), /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js"],"names":["Header","React","useContext","ThingHistoricContext","Line","ThingHistoricValues","props","id","thingProperty","timeData","timestampArray","map","item","timestamp","valueData","title","console","log","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","JSON","stringify"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,sBAArB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,oBAAR,QAAmC,iCAAnC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC1C,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA,aAAL;AAAoBC,IAAAA;AAApB,MAAgCP,UAAU,CAACC,oBAAD,CAAhD;AACA,QAAMO,cAAc,GAAGD,QAAQ,GAAEA,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAF,GAAwC,EAAvE;AACA,QAAMC,SAAS,GAAGL,QAAQ,GAAEA,QAAQ,CAACE,GAAT,CAAaC,IAAI,IAAIA,IAAI,CAACJ,aAAa,CAACO,KAAf,CAAzB,CAAF,GAAmD,EAA7E;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAMI,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAET,cADC;AAETU,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAEb,aAAa,CAACO,KADzB;AAEIO,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,WAAW,EAAE,GAHjB;AAIIC,MAAAA,eAAe,EAAE,yBAJrB;AAKIC,MAAAA,WAAW,EAAE,sBALjB;AAMIC,MAAAA,cAAc,EAAE,MANpB;AAOIC,MAAAA,UAAU,EAAE,EAPhB;AAQIC,MAAAA,gBAAgB,EAAE,GARtB;AASIC,MAAAA,eAAe,EAAE,OATrB;AAUIC,MAAAA,gBAAgB,EAAE,sBAVtB;AAWIC,MAAAA,oBAAoB,EAAE,MAX1B;AAYIC,MAAAA,gBAAgB,EAAE,CAZtB;AAaIC,MAAAA,gBAAgB,EAAE,CAbtB;AAcIC,MAAAA,yBAAyB,EAAE,sBAd/B;AAeIC,MAAAA,qBAAqB,EAAE,wBAf3B;AAgBIC,MAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,MAAAA,WAAW,EAAE,CAjBjB;AAkBIC,MAAAA,cAAc,EAAE,EAlBpB;AAmBIpB,MAAAA,IAAI,EAAEJ;AAnBV,KADM;AAFD,GAAb;AA0BA,sBACI,uDACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEP,EAAE,GAAE,iBAAnB;AAAsC,IAAA,GAAG,EAAE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgC,IAAI,CAACC,SAAL,CAAe/B,QAAf,CADL,CAFJ,eAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAES,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CAxCM","sourcesContent":["import {Header} from \"../components/Header\";\nimport React, {useContext} from \"react\";\nimport {ThingHistoricContext} from \"../context/ThingHistoricContext\";\nimport {Line} from \"react-chartjs-2\";\n\nexport const ThingHistoricValues = (props) => {\n    const {id, thingProperty, timeData} = useContext(ThingHistoricContext);\n    const timestampArray = timeData? timeData.map(item => item.timestamp): [];\n    const valueData = timeData? timeData.map(item => item[thingProperty.title]): [];\n    console.log(valueData)\n    const data = {\n        labels: timestampArray,\n        datasets: [\n            {\n                label: thingProperty.title,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\n                borderColor: 'rgba(75, 192, 192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75, 192, 192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n                pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: valueData\n            }\n        ]\n    };\n    return (\n        <>\n            <Header title={id+ 'Historic Values'} key={'title'}></Header>\n            <pre>\n                {JSON.stringify(timeData)}\n            </pre>\n            <Line data={data}></Line>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}
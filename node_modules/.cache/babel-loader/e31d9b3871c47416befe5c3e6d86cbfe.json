{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js\";\nimport { Header } from \"../components/Header\";\nimport React, { useContext, useState } from \"react\";\nimport { ThingHistoricContext } from \"../context/ThingHistoricContext\";\nimport { Line } from \"react-chartjs-2\";\nimport { Form, FormGroup } from \"react-bootstrap\";\nexport const ThingHistoricValues = props => {\n  const {\n    id,\n    thingProperty,\n    timeData\n  } = useContext(ThingHistoricContext);\n  const timestampArray = timeData ? timeData.map(item => item.timestamp) : [];\n  const [formValues, setFormValues] = useState({});\n  const valueData = timeData ? timeData.map(item => item[thingProperty.title]) : [];\n  console.log(valueData);\n  const data = {\n    labels: timestampArray,\n    datasets: [{\n      label: thingProperty.title,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75, 192, 192, 0.4)',\n      borderColor: 'rgba(75, 192, 192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75, 192, 192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n      pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: valueData\n    }]\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: id + 'Historic Values',\n    key: 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, JSON.stringify(timeData)), /*#__PURE__*/React.createElement(Form, {\n    id: \"dataset-form\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"formStartDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"startDate*\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Define a Date\")), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"formEndDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"endDate*\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter end Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Define an End Date\"))), /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js"],"names":["Header","React","useContext","useState","ThingHistoricContext","Line","Form","FormGroup","ThingHistoricValues","props","id","thingProperty","timeData","timestampArray","map","item","timestamp","formValues","setFormValues","valueData","title","console","log","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","handleChange","event","name","value","target","prevState","JSON","stringify"],"mappings":"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","sourcesContent":["import {Header} from \"../components/Header\";\nimport React, {useContext, useState} from \"react\";\nimport {ThingHistoricContext} from \"../context/ThingHistoricContext\";\nimport {Line} from \"react-chartjs-2\";\nimport {Form, FormGroup} from \"react-bootstrap\";\n\nexport const ThingHistoricValues = (props) => {\n    const {id, thingProperty, timeData} = useContext(ThingHistoricContext);\n    const timestampArray = timeData? timeData.map(item => item.timestamp): [];\n    const [formValues, setFormValues] = useState({});\n    const valueData = timeData? timeData.map(item => item[thingProperty.title]): [];\n    console.log(valueData)\n    const data = {\n        labels: timestampArray,\n        datasets: [\n            {\n                label: thingProperty.title,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\n                borderColor: 'rgba(75, 192, 192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75, 192, 192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n                pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: valueData\n            }\n        ]\n    };\n    const handleChange = (event) => {\n        const {name, value} = event.target\n        setFormValues(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n    }\n    return (\n        <>\n            <Header title={id+ 'Historic Values'} key={'title'}></Header>\n            <pre>\n                {JSON.stringify(timeData)}\n            </pre>\n            <Form id=\"dataset-form\" onChange={handleChange}>\n                <FormGroup controlId=\"formStartDate\">\n                    <Form.Label>startDate*</Form.Label>\n                    <Form.Control required name=\"name\" type=\"text\" placeholder=\"Enter Name\"/>\n                    <Form.Text className=\"text-muted\">\n                        Define a Date\n                    </Form.Text>\n                </FormGroup>\n                <FormGroup controlId=\"formEndDate\">\n                    <Form.Label>endDate*</Form.Label>\n                    <Form.Control required name=\"name\" type=\"text\" placeholder=\"Enter end Date\"/>\n                    <Form.Text className=\"text-muted\">\n                        Define an End Date\n                    </Form.Text>\n                </FormGroup>\n            </Form>\n            <Line data={data}></Line>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}
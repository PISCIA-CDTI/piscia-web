{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js\";\nimport { Header } from \"../components/Header\";\nimport React, { useContext, useState } from \"react\";\nimport { ThingHistoricContext } from \"../context/ThingHistoricContext\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Form, FormGroup, Row } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nexport const ThingHistoricValues = props => {\n  const {\n    id,\n    thingProperty,\n    timeData,\n    formValues,\n    updateFormValues\n  } = useContext(ThingHistoricContext);\n  const timestampArray = timeData ? timeData.map(item => item.timestamp) : [];\n  const valueData = timeData ? timeData.map(item => item[thingProperty.title]) : [];\n  const data = {\n    labels: timestampArray,\n    datasets: [{\n      label: thingProperty.title,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75, 192, 192, 0.4)',\n      borderColor: 'rgba(75, 192, 192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75, 192, 192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n      pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: valueData\n    }]\n  };\n\n  const handleChange = event => {\n    updateFormValues(event);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: id + 'Historic Values',\n    key: 'title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, JSON.stringify(formValues)), /*#__PURE__*/React.createElement(Form, {\n    id: \"dataset-form\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"formStartDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"startDate\",\n    type: \"text\",\n    placeholder: \"Enter start date in form of YYYY-MM-DDTHH:MM:ss.SSSZ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"formEndDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"endDate\",\n    type: \"text\",\n    placeholder: \"Enter end Date in form of YYYY-MM-DDTHH:MM:ss.SSSZ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"list-dataset\",\n    variant: \"outline-success\",\n    class: 'mb-2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Update Chart\"))))), /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/pages/ThingHistoricValues.js"],"names":["Header","React","useContext","useState","ThingHistoricContext","Line","Col","Form","FormGroup","Row","Button","Card","ThingHistoricValues","props","id","thingProperty","timeData","formValues","updateFormValues","timestampArray","map","item","timestamp","valueData","title","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","handleChange","event","JSON","stringify"],"mappings":"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","sourcesContent":["import {Header} from \"../components/Header\";\nimport React, {useContext, useState} from \"react\";\nimport {ThingHistoricContext} from \"../context/ThingHistoricContext\";\nimport {Line} from \"react-chartjs-2\";\nimport {Col, Form, FormGroup, Row} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport const ThingHistoricValues = (props) => {\n    const {id, thingProperty, timeData, formValues, updateFormValues} = useContext(ThingHistoricContext);\n    const timestampArray = timeData? timeData.map(item => item.timestamp): [];\n    const valueData = timeData? timeData.map(item => item[thingProperty.title]): [];\n    const data = {\n        labels: timestampArray,\n        datasets: [\n            {\n                label: thingProperty.title,\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\n                borderColor: 'rgba(75, 192, 192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75, 192, 192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75, 192, 192,1)',\n                pointHoverBorderColor: 'rgba(220, 220, 220, 1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: valueData\n            }\n        ]\n    };\n    const handleChange = (event) => {\n        updateFormValues(event);\n    }\n    return (\n        <>\n            <Header title={id+ 'Historic Values'} key={'title'}></Header>\n            <pre>\n                {JSON.stringify(formValues)}\n            </pre>\n            <Form id=\"dataset-form\" onChange={handleChange}>\n                <Row>\n                    <Col>\n                        <FormGroup controlId=\"formStartDate\">\n                            <Form.Control required name=\"startDate\" type=\"text\" placeholder=\"Enter start date in form of YYYY-MM-DDTHH:MM:ss.SSSZ\"/>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup controlId=\"formEndDate\">\n                            <Form.Control required name=\"endDate\" type=\"text\" placeholder=\"Enter end Date in form of YYYY-MM-DDTHH:MM:ss.SSSZ\"/>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <Button id=\"list-dataset\" variant=\"outline-success\" class={'mb-2'}>Update Chart</Button>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </Form>\n            <Line data={data}></Line>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingHistoricContext.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst moment = require(\"moment\");\n\nconst ThingHistoricContext = React.createContext();\n\nconst ThingHistoricContextProvider = props => {\n  let location = useLocation();\n  let {\n    id\n  } = useParams();\n  let thingId = location.state.thingId;\n  let thingProperty = location.state.property;\n  const serverAPImethod = `${thingId}/properties/${thingProperty.title}`;\n  const [timeData, setTimeData] = useState([]);\n  const [formValues, setFormValues] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      console.log(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n      const response = await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n\n      if (response.status === 200) {\n        setTimeData(response.data.values);\n      }\n    }\n\n    const endDate = moment().toISOString();\n    const startDate = moment().subtract(30, 'days').toISOString();\n    fetchData(startDate, endDate);\n  }, []);\n\n  const updateFormValues = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const onClick = async (startDate, endDate) => {\n    if (!startDate || !endDate) return;\n    if (Date.parse(new Date(startDate).toISOString()) - Date.parse(new Date(endDate).toISOString()).toISOString() > 0) return;\n    const response = await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n\n    if (response.status === 200) {\n      setTimeData(response.data.values);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ThingHistoricContext.Provider, {\n    value: {\n      id,\n      thingId,\n      thingProperty,\n      timeData,\n      formValues,\n      updateFormValues\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport { ThingHistoricContext, ThingHistoricContextProvider };","map":{"version":3,"sources":["/Users/aitor/Downloads/Github/imaqua/water-middleware-eye/src/context/ThingHistoricContext.js"],"names":["React","useEffect","useState","useLocation","useParams","axios","moment","require","ThingHistoricContext","createContext","ThingHistoricContextProvider","props","location","id","thingId","state","thingProperty","property","serverAPImethod","title","timeData","setTimeData","formValues","setFormValues","fetchData","console","log","startDate","endDate","response","get","status","data","values","toISOString","subtract","updateFormValues","event","name","value","target","prevState","onClick","Date","parse","children"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useLocation } from \"react-router\";\nimport {useParams} from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst moment = require(\"moment\");\n\nconst ThingHistoricContext = React.createContext();\n\nconst ThingHistoricContextProvider = (props) => {\n    let location = useLocation();\n    let { id } = useParams();\n    let thingId = location.state.thingId;\n    let thingProperty = location.state.property;\n    const serverAPImethod = `${thingId}/properties/${thingProperty.title}`;\n    const [timeData, setTimeData] = useState([]);\n    const [formValues, setFormValues] = useState({})\n\n    useEffect(  () => {\n        async function fetchData() {\n            console.log(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`)\n            const response =  await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n            if (response.status === 200){\n                setTimeData(response.data.values);\n            }\n        }\n        const endDate =  moment().toISOString();\n        const startDate =  moment().subtract(30, 'days').toISOString();\n        fetchData(startDate, endDate);\n    }, []);\n\n    const updateFormValues = (event) => {\n        const {name, value} = event.target\n        setFormValues(prevState => {\n            return {\n                ...prevState,\n                [name]: value\n            }\n        });\n    };\n\n    const onClick = async (startDate, endDate) => {\n        if (!startDate || !endDate) return;\n        if (Date.parse(new Date(startDate).toISOString())- Date.parse(new Date(endDate).toISOString()).toISOString() > 0) return;\n        \n        const response =  await axios.get(`${serverAPImethod}?time=${startDate}&timeEnd=${endDate}`);\n        if (response.status === 200){\n            setTimeData(response.data.values);\n        }\n    }\n\n    return (\n        <ThingHistoricContext.Provider value ={{\n            id,\n            thingId,\n            thingProperty,\n            timeData,\n            formValues,\n            updateFormValues\n        }}>\n            {props.children}\n        </ThingHistoricContext.Provider>\n    )\n\n}\n\n\nexport {ThingHistoricContext, ThingHistoricContextProvider}"]},"metadata":{},"sourceType":"module"}